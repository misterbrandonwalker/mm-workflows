steps:

  - pdbbind_subset:
      in:
        pdb_ids: "input_pdbs.txt"
        max_output: 400
        output_pdb_files: "&output_pdb_files"
        output_ligand_files: "&output_ligand_files"

  - copy_diffdock_cache:
      in:
        cache: "&cached_file"

  - benchmark_inputs_diffdock:
      in:
        protein_path_array: "*output_pdb_files"
        ligand_path_array: "*output_ligand_files"
        samples_per_complex_array: [20]
        inference_steps_array: [20]
        batch_size: 16
        actual_steps: 20
        no_final_step_noise: true
        top_n_confident: 1000
        top_percent_confidence: 33
        centroid_cutoff: 5
        use_clustering_filter: false
        samples_per_complex: "&samples_per_complex"
        inference_steps: "&inference_steps"
        batch_size_out: "&batch_size"
        actual_steps_out: "&actual_steps"
        no_final_step_noise_out: "&no_final_step_noise"
        top_n_confident_out: "&top_n_confident"
        protein_path_out: "&protein_path_bench"
        ligand_path: "&ligand_path_bench"
        top_percent_confidence_out: "&top_percent_confidence"
        centroid_cutoff_out: "&centroid_cutoff"
        use_clustering_filter_out: "&use_clustering_filter"

  - zip_arrays:
      in:
        first_array: "*protein_path_bench"
        second_array: "*ligand_path_bench"
        zipped_array: "&protein_ligand_bench"


  - diffdock_workflow.yml:
      scatter: [samples_per_complex, inference_steps, ligand_protein_paths]
      scatterMethod: flat_crossproduct
      in:
        ligand_protein_paths: "*protein_ligand_bench"
        inference_steps: "*inference_steps"
        samples_per_complex: "*samples_per_complex"
        batch_size: "*batch_size"
        actual_steps: "*actual_steps"
        no_final_step_noise: "*no_final_step_noise"
        top_n_confident: "*top_n_confident"
        top_percent_confidence: "*top_percent_confidence"
        centroid_cutoff: "*centroid_cutoff"
        use_clustering_filter: "*use_clustering_filter"
        cache: "*cached_file"

  - evaluate_benchmark_diffdock:
      in:
        input_json_files: "*output_json"


wic:
  graphviz:
    label: DiffDock

  steps:
    (1, pdbbind_subset):
      wic:
        graphviz:
          label: Subset of PDBBind
    (2, copy_diffdock_cache):
      wic:
        graphviz:
          label: Copy DiffDock cache
    (3, benchmark_inputs_diffdock):
      wic:
        graphviz:
          label: Benchmark Inputs
    (4, zip_arrays):
      wic:
        graphviz:
          label: Zip Protein-Ligands
    (5, diffdock_workflow.yml):
      wic:
        namespace: gpu_diffdock
        graphviz:
          label: Scatter DiffDock
    (6, evaluate_benchmark_diffdock):
      wic:
        graphviz:
          label: Evaluate benchmarks